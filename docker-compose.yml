version: '3.8'

services:
  backend:
    container_name: spring-backend
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/mydb
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
      - SPRING_REDIS_HOST=redis
    depends_on:
      - db
      - redis
    networks:
      - app-network

  ai-agent:
    container_name: flask-ai-agent
    build:
      context: ./ai-agent
    ports:
      - "7860:7860"
    depends_on:
      - backend
    networks:
      - app-network

  frontend:
    container_name: react-frontend
    build:
      context: ./frontend
    ports:
      - "3000:3000"
    depends_on:
      - ai-agent
    networks:
      - app-network

  db:
    container_name: postgres-db
    image: postgres:15
    restart: always
    environment:
      POSTGRES_DB: mydb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - db-data:/var/lib/postgresql/data
    networks:
      - app-network

  redis:
    container_name: redis-cache
    image: redis:7
    restart: always
    ports:
      - "6379:6379"
    networks:
      - app-network

  minio:
    container_name: minio-storage
    image: minio/minio:latest
    command: server /data --console-address ":9001"
    ports:
      - "9000:9000"   # S3 API
      - "9001:9001"   # Web UI
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    volumes:
      - minio-data:/data
    networks:
      - app-network

volumes:
  db-data:
  minio-data:

networks:
  app-network:
    driver: bridge
